flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#FFFFFF"
  image: assets/images/png/splash-logo.png

  android_12:
  #   color: "#6174FA"
  #   color_dark: "#6174FA"
  #   image: assets/images/png/splash_qazyna_android_12.png
  #   image_dark: assets/images/png/splash_qazyna_android_12.png
  #   # icon_background_color: "#FFFFFF"
  #   # icon_background_color_dark: "#323131"
  #   # branding: assets/images/png/splash-branding.png
  #   branding: assets/images/png/made_by_thousand_android.png

  # # This property allows you to specify an image used as branding in the splash screen. It must be
  # # a png file. Currently, it is only supported for Android and iOS.
  # branding: assets/images/png/made_by_thousand_android.png

  # Specify your branding image for dark mode.
  #branding_dark: asset/dart_dark.png

  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
  # and bottomLeft. The default values is bottom if not specified or specified something else.
  #
  # Make sure this content mode value should not be similar to android_gravity value and
  # ios_content_mode value.
  # branding_mode: bottom

  # The color_dark, background_image_dark, and image_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  # color_dark: "#6174FA"
  #background_image_dark: "asset/dark-background.png"
  # image_dark: assets/images/png/splash_qazyna_1.png
  
  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  # android: false
  #ios: false
  # web: false

  # Platform specific images can be specified with the following parameters, which will override
  # the respective parameter.  You may specify all, selected, or none of these parameters:
  #color_android: "#42a5f5"
  #color_dark_android: "#042a49"
  # color_ios: "#FFFFFF"
  # color_dark_ios: "#FFFFFF"
  #color_web: "#42a5f5"
  #color_dark_web: "#042a49"
  # image_android: assets/images/png/splash-AstanaHub-Logo.png
  # image_dark_android: assets/images/png/splash-AstanaHub-Logo.png
  # image_ios: assets/images/png/splash-AstanaHub-Logo.png
  # image_dark_ios: assets/images/png/splash-AstanaHub-Logo.png
  #image_web: assets/splash-web.png
  #image_dark_web: assets/splash-invert-web.png
  #background_image_android: "assets/background-android.png"
  #background_image_dark_android: "assets/dark-background-android.png"
  #background_image_ios: "assets/background-ios.png"
  #background_image_dark_ios: "assets/dark-background-ios.png"
  #background_image_web: "assets/background-web.png"
  #background_image_dark_web: "assets/dark-background-web.png"
  # branding_android: assets/images/png/made_by_thousand_android.png
  # branding_dark_android: assets/images/png/made_by_thousand_android.png
  # branding_ios: assets/images/png/made_by_thousand_ios.png
  # branding_dark_ios: assets/images/png/made_by_thousand_ios.png

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # The screen orientation can be set in Android with the android_screen_orientation parameter.
  # Valid parameters can be found here:
  # https://developer.android.com/guide/topics/manifest/activity-element#screen
  #android_screen_orientation: sensorLandscape

  # To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  #fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'
